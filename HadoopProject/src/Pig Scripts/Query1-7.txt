AccessLog = LOAD '/user/hadoop/Facebook1/AccessLog1' USING PigStorage (',') AS (AccessId: int, ByWho: int, WhatPage: int, TypeOfAccess: chararray, AccessTime: int);

MyPage = LOAD '/user/hadoop/Facebook1/MyPage1' USING PigStorage(',') AS (ID: int, Name: chararray, Nationality: chararray, CountryCode: int,Hobby: chararray);

Friends = LOAD '/user/hadoop/Facebook1/Friends1' USING PigStorage(',') AS (FriendRel: int, PersonID: int, MyFriend: int, DateofFriend: int, Des: chararray);

Query1:
A = Filter MyPage BY Nationality == 'China';
B = FOREACH A GENERATE Name, Hobby;
DUMP B;
STORE B INTO '/user/hadoop/Facebook1/Output/Query1' USING PigStorage(',');

Query2:
C = GROUP MyPage BY Nationality;
D = FOREACH C GENERATE group, COUNT(MyPage.ID);
DUMP D;

Query3:
E = GROUP AccessLog BY WhatPage;
F = FOREACH E GENERATE FLATTEN(group), COUNT(AccessLog.AccessId) as count;
G = ORDER F BY count DESC;
H = LIMIT G 10;
DUMP H;

Query4:
I= GROUP Friends BY PersonID;
J= FOREACH I GENERATE FLATTEN(group), COUNT(Friends.MyFriend) as happiness;
K= JOIN MyPage BY ID, J BY group;
L= FOREACH K GENERATE MyPage::Name, J::happiness;
DUMP L;

Query5:
M= GROUP AccessLog BY ByWho;
N= FOREACH M {
unique_WhatPage= DISTINCT AccessLog.WhatPage;
GENERATE group, COUNT(AccessLog.AccessId) as total, COUNT(unique_WhatPage) as favorite;
};
DUMP N;

Query6:
O= Group Friends BY (PersonID, MyFriend);
P= FOREACH O GENERATE FLATTEN(group);
Q= Group AccessLog BY (ByWho,WhatPage);
R= FOREACH Q GENERATE FLATTEN(group);
S= JOIN P BY group::PersonID LEFT OUTER, R BY group::ByWho;
T= Filter S BY (R::group::WhatPage is null);
U= FOREACH MyPage GENERATE ID,Name;
V= JOIN T BY P::group::PersonID, U BY ID;
W= FOREACH V GENERATE U::Name;
DUM W;

Query7:
X= FOREACH MyPage GENERATE ID,Name;
Y= GROUP AccessLog BY ByWho;
Z= FOREACH Y GENERATE FLATTEN(group),(MAX(AccessLog.AccessTime) - MIN(AccessLog.AccessTime)) as length;
A= FILTER Z BY length <= 10;
B= JOIN X BY ID, A BY group;
C= FOREACH B GENERATE X::Name;
DUMP C;